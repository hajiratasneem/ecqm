{
    "resourceType": "Library",
    "id": "library-CMS69v8",
    "meta": {
      "versionId": "1",
      "lastUpdated": "2019-08-16T23:03:04.792+00:00",
      "profile": [
        "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/library-cqfm"
      ]
    },
    "url": "http://hl7.org/fhir/us/cqfmeasures/Library/library-CMS69v8",
    "identifier": [
      {
        "use": "official",
        "system": "http://example.org/fhir/cqi/ecqm/Library/Identifier",
        "value": "CMS69v8"
      }
    ],
    "version": "8.2.000",
    "name": "BMIScreeningandFollowupPlan",
    "title": "BMI Screening and Follow up Plan",
    "status": "active",
    "experimental": true,
    "type": {
      "coding": [
        {
          "system": "http://hl7.org/fhir/library-type",
          "code": "logic-library"
        }
      ] 
    },
    "date": "2019-12-03",
    "publisher": "Health Level 7 International - Clinical Quality Information Work Group",
    "description": "This library is used as an example in the FHIR Quality Measure Implementation Guide",
    "approvalDate": "2019-08-03",
    "lastReviewDate": "2019-08-03",
    "contact": [
      {
        "telecom": [
          {
            "system": "url",
            "value": "http://www.hl7.org/Special/committees/cqi/index.cfm"
          }
        ]
      }
    ],
    "relatedArtifact": [
      {
        "type": "depends-on",
        "resource": "Library/41151"
    }
    ],
    "dataRequirement": [
      {
        "type": "Condition",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1.1623"
          }
        ]
      },  
      {
        "type": "Encounter",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1.1575"
          }
        ]
      },
      {
        "type": "Encounter",
        "codeFilter": [
          {
            "path": "code",
            "code": [
                {
                    "code":"39156-5"
                }
            ]
          }
        ]
      },
      {
        "type": "ServiceRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1.1527"
          }
        ]
      },
      {
        "type": "MedicationRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1.1498"
          }
        ]
      },
      {
        "type": "MedicationRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1.1499"
          }
        ]
      },
      {
        "type": "ServiceRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1.1525"
          }
        ]
      },
      {
        "type": "Procedure",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1.1525"
          }
        ]
      },
      {
        "type": "ServiceRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1.1528"
          }
        ]
      },
      {
        "type": "Procedure",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1.1528"
          }
        ]
      },
      {
        "type": "ServiceRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1.1579"
          }
        ]
      }
    ],
    "content": [
      {
        "contentType": "text/cql",
        "data": ""
      }
    ]
  }