{
    "resourceType": "Library",
    "id": "library-CMS22v8",
    "meta": {
      "versionId": "1",
      "lastUpdated": "2019-08-16T23:03:04.792+00:00",
      "profile": [
        "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/library-cqfm"
      ]
    },
    "url": "http://hl7.org/fhir/us/cqfmeasures/Library/library-CMS22v8",
    "identifier": [
      {
        "use": "official",
        "system": "http://example.org/fhir/cqi/ecqm/Library/Identifier",
        "value": "CMS22v8"
      }
    ],
    "version": "8.2.000",
    "name": "PreventiveCareandScreeningforHighBloodPressureandFollowUpDocumented",
    "title": "Preventive Careand Screening for High Blood Pressure and Follow Up Documented",
    "status": "active",
    "experimental": true,
    "type": {
      "coding": [
        {
          "system": "http://hl7.org/fhir/library-type",
          "code": "logic-library"
        }
      ] 
    },
    "date": "2019-12-03",
    "publisher": "Health Level 7 International - Clinical Quality Information Work Group",
    "description": "This library is used as an example in the FHIR Quality Measure Implementation Guide",
    "approvalDate": "2019-08-03",
    "lastReviewDate": "2019-08-03",
    "contact": [
      {
        "telecom": [
          {
            "system": "url",
            "value": "http://www.hl7.org/Special/committees/cqi/index.cfm"
          }
        ]
      }
    ],
    "relatedArtifact": [
      {
        "type": "depends-on"
      }
    ],
    "dataRequirement": [
      {
        "type": "Encounter",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1920"
          }
        ]
      },  
      {
        "type": "Observation",
        "codeFilter": [
          {
            "path": "code",
            "code":[{
                "code":"8462-4"
            }]
          }
        ]
      },
      {
        "type": "Observation",
        "codeFilter": [
          {
            "path": "code",
            "code":[{
                "code":"8480-6"
            }]
          }
        ]
      },
      {
        "type": "MedicationRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1476"
          }
        ]
      },
      {
        "type": "Condition",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.263"
          }
        ]
      },  
      {
        "type": "ServiceRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.2448"
          }
        ]
      },
      {
        "type": "ServiceRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1537"
          }
        ]
      },
      {
        "type": "ServiceRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1475"
          }
        ]
      },
      {
        "type": "ServiceRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1508"
          }
        ]
      },
      {
        "type": "ServiceRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1510"
          }
        ]
      },
      {
        "type": "ServiceRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1515"
          }
        ]
      },
      {
        "type": "ServiceRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1518"
          }
        ]
      },
      {
        "type": "ServiceRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.823"
          }
        ]
      },
      {
        "type": "ServiceRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1482"
          }
        ]
      },
      {
        "type": "ServiceRequest",
        "codeFilter": [
          {
            "path": "code",
            "valueSet": "urn:oid:2.16.840.1.113883.3.600.1474"
          }
        ]
      }
      
    ],
    "content": [
      {
        "contentType": "text/cql",
        "data": ""
      }
    ]
  }